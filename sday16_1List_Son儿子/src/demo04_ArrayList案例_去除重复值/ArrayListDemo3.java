package demo04_ArrayList案例_去除重复值;

import java.util.ArrayList;
import java.util.Iterator;

/*
 * ArrayList去除集合中自定义对象的重复值（对象的成员变量值都相同）
 * 
 * 我们按照和字符串一样的操作，发现出问题了。
 * 为什么呢？
 * 		我们必须思考哪里会出问题？
 *  	通过简单的分析。我们知道问题出现在了判断上，
 *  	而这个判断功能是集合自己提供的，所以我们如果想很清楚的知道他是如何判断的，就应该去看源码。
 *  contains()方法的底层依赖的是equals()方法。
 *  而我们的学生类中没有equals()方法，这时候，默认使用的是他父亲Object的equals()方法。
 *  Object的equals()方法默认比较的是地址值，所以他们都进去了，因为new的东西，所以地址值都不同。
 *  按照我们自己的需求，比较成员变量的值，
 *  
 *  重写equals()即可。自动生成即可
 *  
 */
public class ArrayListDemo3 {
	public static void main(String[] args) {
		// 创建集合对象
		ArrayList array  = new ArrayList();
		
		// 创建学生对象
		Student s1 = new Student("林青霞", 27);
		Student s2 = new Student("林志玲", 40);
		Student s3 = new Student("风姐", 35);
		Student s4 = new Student("芙蓉姐姐", 18);
		Student s5 = new Student("翠花", 16);
		Student s6 = new Student("林青霞", 27);
		Student s7 = new Student("林青霞", 18);
		
		// 添加元素
		array.add(s1);
		array.add(s2);
		array.add(s3);
		array.add(s4);
		array.add(s5);
		array.add(s6);
		array.add(s7);
		

		// 创建新集合
		ArrayList newArray = new ArrayList();

		// 遍历旧集合，获取到每一个元素
		Iterator it = array.iterator();
		while (it.hasNext()) {
			Student s = (Student) it.next();
			
			// 拿到这个元素到新集合中去找，看有没有
			if (!newArray.contains(s)) {
				newArray.add(s);
			}
		}
		
		// 遍历新集合
		for (int i = 0; i < newArray.size(); i++) {
			Student s = (Student) newArray.get(i);
			System.out.println(s);
		}
		
	}
}
