需求：用户登录注册案例

按照如下的操作，可以让我们更符合面向对象的思想。
	a:有哪些类呢？
	b:每个类有哪些东西呢？
	c:类与类之间关系是什么呢？
	
分析：
	a:有哪些类呢？
		用户类
		测试类
	b:每个类有哪些东西呢？
		用户类：
			成员变量：用户名，密码
			构造方法：无参构造
			成员方法：getXxx()和setXxx()
					登录，注册
					
			假如用户类的内容比较多，将来维护起来比较麻烦，为了更清晰的分类，我们就把用户又划分了两类。
				用户基本描述类。
					成员变量：用户名，密码
					构造方法：无参构造
					成员方法：getXxx()和setXxx()
				用户操作类。
					登录，注册
			
		测试类：
			main方法
	c:类与类之间关系是什么呢？
		在测试类中创建用户操作类和用户基本描述类的对象，并使用其功能。
		
分包：
	a:按功能划分
	b:模块划分
	c:先按模块划分，在按功能划分
		
今天我们选择按功能划分：
	用户基本描述类包：demo.pojo
	用户操作接口：demo.dao
	用户操作类包：demo.dao.impl
		今天是集和实现，过几天是IO实现，再过几天是GUI实现，就业班我们就是数据库实现
	用户测试类：demo.test
	