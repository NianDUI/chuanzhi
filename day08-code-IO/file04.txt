赋值，简单也不简单变量命名
在《初识永远强大的函数》一文中，有一节专门讨论“取名字的学问”，就是有关变量名称的问题，本温故而知新的原则，这里要复习：名称格式：（下划线或者字母）+（任意数目的字母，数字或下划线）注意：
1.	区分大小写
2.	禁止使用保留字
3.	遵守通常习惯
4.	以单一下划线开头的变量名（_X)不会被from	module	import	*语句导入的。
5.	前后有下划线的变量名（X)是系统定义的变量名，对解释器有特殊意义。
6.	以两个下划线开头，但结尾没有两个下划线的变量名（__X)是类本地（压缩）变量。
7.	通过交互模式运行时，只有单个下划线变量(_)会保存最后的表达式结果。
需要解释一下保留字，就是python里面保留了一些单词，这些单词不能让用户来用作变量名称。都有哪些呢？(python2和python3少有差别，但是总体差不多）
and	assert	break	class	continue	def	del	elif	else	except	exec	finally	for	from	global	if	import	in	is lambda	not	or	pass	print	raise	return	try	while	yield
需要都记住吗？当然不需要了。一方面，可以在网上随手查到，另外，还能这样：
>>>	not	=	3
		File	"<stdin>",	line	1 				not	=	3
								^
SyntaxError:	invalid	syntax
>>>	pass	=	"hello,world" 		File	"<stdin>",	line	1 				pass	=	"hello,world"
									^
SyntaxError:	invalid	syntax
在交互模式的实验室中，用保留字做变量，就报错了。当然，这时候就要换名字了。以上原则，是基本原则。在实际编程中，大家通常还这样做，以便让程序更具有可读性：名字具有一定的含义。比如写：n	=	"qiwsir"，就不如写：name	=	"qiwsir"更好。
名字不要误导别人。比如用account_list指一组账号，就会被人误解为是list类型的数据，事实上可能是也可能不是。所以这时候最好换个名称，比如直接用accounts。
  名字要有意义的区分，有时候你可能会用到a1,a2之类的名字，最好不要这么做，换个别的方式，通过字面能够看出一定的区分来更好。
  最好是名称能够读出来，千万别自己造英文单词，也别乱用所写什么的，特别是贵国的，还喜欢用汉语拼音缩写来做为名字，更麻烦了，还不如全拼呢。最好是用完整的单词或者公认的不会引起歧义的缩写。
  单个字母和数字就少用了，不仅是显得你太懒惰，还会因为在一段代码中可能有很多个单个的字母和数字，为搜索带来麻烦，别人也更不知道你的i和他理解的i是不是一个含义。
